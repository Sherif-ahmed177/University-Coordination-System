@model UniversityApplicationSystem.Models.ViewModels.ApplicationViewModel

@{
    ViewData["Title"] = "Application Details";
}

<div class="container mt-4">
    <h2>Application Details</h2>
    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-8">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Application Information</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-3">Application ID</dt>
                        <dd class="col-sm-9">@Model.Application.ApplicationID</dd>

                        <dt class="col-sm-3">Student</dt>
                        <dd class="col-sm-9">@($"{Model.Application.Student?.FirstName} {Model.Application.Student?.LastName}")</dd>

                        <dt class="col-sm-3">Major</dt>
                        <dd class="col-sm-9">@Model.Application.Major?.Name</dd>

                        <dt class="col-sm-3">Application Date</dt>
                        <dd class="col-sm-9">@Model.Application.ApplicationDate.ToString("g")</dd>

                        <dt class="col-sm-3">Status</dt>
                        <dd class="col-sm-9">
                            <span class="badge @(Model.Application.Status switch {
                                "Approved" => "bg-success",
                                "Pending" => "bg-warning",
                                "Rejected" => "bg-danger",
                                "Waitlisted" => "bg-info",
                                _ => "bg-secondary"
                            })">
                                @Model.Application.Status
                            </span>
                        </dd>

                        <dt class="col-sm-3">Grade</dt>
                        <dd class="col-sm-9">@(Model.Application.Grade?.ToString() ?? "Not provided")</dd>
                    </dl>
                </div>
            </div>

            @if (Model.Application.Payment != null)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Payment Information</h5>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Payment ID</dt>
                            <dd class="col-sm-9">@Model.Application.Payment.PaymentID</dd>

                            <dt class="col-sm-3">Amount</dt>
                            <dd class="col-sm-9">@Model.Application.Payment.Amount.ToString("C")</dd>

                            <dt class="col-sm-3">Payment Date</dt>
                            <dd class="col-sm-9">@Model.Application.Payment.PaymentDate.ToString("g")</dd>

                            <dt class="col-sm-3">Status</dt>
                            <dd class="col-sm-9">
                                <span class="badge @(Model.Application.Payment.Status switch {
                                    "Completed" => "bg-success",
                                    "Pending" => "bg-warning",
                                    "Failed" => "bg-danger",
                                    "Refunded" => "bg-info",
                                    _ => "bg-secondary"
                                })">
                                    @Model.Application.Payment.Status
                                </span>
                            </dd>

                            <dt class="col-sm-3">Transaction ID</dt>
                            <dd class="col-sm-9">@(Model.Application.Payment.TransactionID ?? "Not provided")</dd>
                        </dl>

                        @if (Model.Application.Payment.Status == "Pending")
                        {
                            <div class="mt-3">
                                <a asp-controller="Payment" asp-action="Edit" asp-route-id="@Model.Application.Payment.PaymentID" class="btn btn-primary">
                                    <i class="bi bi-credit-card"></i> Complete Payment
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning">
                    <i class="bi bi-exclamation-triangle"></i> No payment information available.
                </div>
            }

            <div class="mt-3">
                <a asp-action="Edit" asp-route-id="@Model.Application.ApplicationID" class="btn btn-primary">
                    <i class="bi bi-pencil"></i> Edit
                </a>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 